<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.newtours.demoaut.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">D:\JMeter\jmeter_docs\FlightPassangerDetails.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.newtours.demoaut.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="osCsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osCsid</stringProp>
                  <stringProp name="Argument.value">cfd435893b184ad345abfb4121dc1190</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">process</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                  <stringProp name="Argument.value">satya001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">1122</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="login.x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login.x</stringProp>
                  <stringProp name="Argument.value">16</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="login.y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login.y</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurysignon.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="osCsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osCsid</stringProp>
                  <stringProp name="Argument.value">cfd435893b184ad345abfb4121dc1190</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercuryreservation.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurysignon.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FlightDetails-9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tripType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripType</stringProp>
                  <stringProp name="Argument.value">roundtrip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="passCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fromPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="servClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">servClass</stringProp>
                  <stringProp name="Argument.value">Coach</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="airline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">airline</stringProp>
                  <stringProp name="Argument.value">No Preference</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="findFlights.x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">findFlights.x</stringProp>
                  <stringProp name="Argument.value">58</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="findFlights.y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">findFlights.y</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercuryreservation2.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation.php?osCsid=cfd435893b184ad345abfb4121dc1190</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-15" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fromPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="passCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="servClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">servClass</stringProp>
                  <stringProp name="Argument.value">Coach</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="outFlight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">outFlight</stringProp>
                  <stringProp name="Argument.value">Blue Skies Airlines$360$270$5:03</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inFlight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">inFlight</stringProp>
                  <stringProp name="Argument.value">Blue Skies Airlines$630$270$12:23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reserveFlights.x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reserveFlights.x</stringProp>
                  <stringProp name="Argument.value">56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reserveFlights.y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reserveFlights.y</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercurypurchase.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation2.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-19" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/black</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-21" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�n� &#x14;�&#x17;�`�1�z�TE��Li+u�0��H�X�DI��{&#x1f;i�V-&#x3;&#x12;��{w!�&lt;&#x3;��&#x0;&amp;䁬�w���9&#x10;RQጡ�䒶RhZ�&#xc;@*��D�M`��ӓ�ţf5�LQ�w�u���M�8&#x7f;G�&#x11;҂D�5+b�9x{&#x13;��BL���`�!&#x15;�S��jP�&#x1f;|p&#x1b;w�e��xt�q4��P�&gt;�&gt;�~�&#x13;�+Vq��_�`ί&#x7f;&apos;G�\L�&lt;�O&#x1f;�A&#x8;�y&#x1f;��&#xf;�4�8&gt;��;ڇj�&#x1c;mY~0�&#x4;&#x1;�&#x4;&#x1;�&#x2;�F�&#x1c;�qe����&#x1e;�m���~&#x5;�bE�&#x15;.7��#8_�\�&#x5;#��&#xf;�J.&#x4;^&amp;��}�7���&#x6;&#xf;S�գ��BpEk��6-���&#x1f;4&#x15;��^K�,���&#x5;+	���&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/c10de356-3daa-4515-8537-2b0ee56c87f5/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-23" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�j�0&#x10;�&#x17;�#��-ǷB	�М�&#x16;z)���&#x2;�2�&#x12;���{�n&#xf;-�&#xe;&#x2;�Όf�F�u&#x2;Ґ&#x1e;L�=�&#x10;����ɪV��&#xe;�&#x12;N�Z�*�̖C��Z �&amp;0������C0�(�(�G�&#x1a;&amp;&#x1b;V&#x16;[]�!�&#xc;iF&quot;iԆ�i&#xd;
ޮB�܈I��&#x19;l&gt;���RW�R(iO&gt;����e&#x15;&#x13;x��8&#x1a;ͰPw&gt;A&#x17;/?��&#x5;+8B��S0ח��3�.&amp;D��&#xf;� ����4�þL6&#xe;&#xf;����^):�g�,ߛq��x�&#x0;f&#x6;rG#s&#xd;Ѹe�8/�w����p�&#x15;���-&#xd;
�p^&#x1;?&#xc;�����&#x18;qg|X+�&#x11;x&#x1e;��&#x1f;�&#x1;�B�Qg��1��h]j)yE&#x5;�%U5��&#x16;[Me-�եd&#x16;&#x4;�&#x7f;&#x2;&#x18;�Ӛ�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/911d3684-5efe-42d4-847f-4c0a91eff182/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-22" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�j�0&#x10;�&#x17;�#��%ŷB	�М�&#x16;z)���&#x2;��설!�ޕ�CK+�`ggF�s#�u&#x2;R�&#xe;\\:�!���K��T�r�&#x15;ULl�&#x5;-)�V5��V�&#x16;�u&#x2;��qxtK�&#x10;L0�4���Y�W����&#x1b;2ϐf$�Jm���&#x18;�UH�&#x1b;q���&#x2;�rJ��b5�&#xd;
%�&#x14;b�o�}�f&#x2;�&#x11;&#x6;[��3u&#x17;&#x12;���=1�`&#x5;G�	�&#x14;���o�&#xc;C3&amp;D�Ə&#x10;�C&#x8;�K;��&#x1f;�e�������&#x7b5;��|���&#x1b;&#x6;��&apos;��f w4r�8�&amp;�5���&#x1e;�u&#x7f;8&#x1c;&#x7f;&#xd;�Y��&#x2;#�W �=4!&apos;�!3��s!���&#x8;&lt;&#xf;H�&#xf;}Ě�QV�&#x0;ò�cLi��&#xd;
(K�,xj��Pi%xSJV� �O���x�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/b306334b-1114-4029-8e63-1684df8b842f/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-25" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�j�0&#x10;�&#x17;�##˲e�V(�&#x1c;�Sh����&#x1a;&#xb;d��JH&#x1a;��]�9��:,hvf��+I�&#x5;HOFP&gt;�dC��_;0�����&#x13;��a�TsVRɹ���x�j�&#x8;*�0?��=8㌲���P��u=�&#xd;
��;2O&#x10;W$�^l�Z&#x16;��]H�+Qь.�IǘM�mC&#x1b;�&#x12;}t���×5��\�jVS�n]�!�&#x7f;�&#x13;)&#xb;V�&#x8;Y�.^]^�nN0�&#x10;&#x11;y	��{�&#x10;2�&#x10;��&#xf;���0=i�&#x1d;�&#x11;tZO&amp;&#x1f;?�y&#x6;�x&#x4;&#xf;j&#x5;rC#u�A�|WX�|D}����_AKV���&#xd;
�;�	��MnȊ&#x11;���{%W&#x2;&#x7;���q���&#xd;U�;�ӽ&#x1d;)kYUeC9�5&#x15;-h��NҪ�@˺b&#x6;8�}&#x1;ml[O�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/8f0cbf53-2944-4ff2-b201-722b5dd9298b/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-24" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�n� &#x10;�&#x17;��&#x2;l&#x3;��R&#x15;)�收R/&#x15;����&#x1f;�$J&#x1a;�&#x7fb;�=�j9 1;3�&#x38d;��&#xc;�%=��z�!��KK�&#x18;�&#x1d;��XZu���YN��4ئi$&#x0;rm&#x4;��4&gt;��=&#x4;&#x13;�2I�:p�rي�(��&#xd;�g�&#xb;&#x12;I[m�����*$퍘h{���S�&amp;&#x17;-��Pҝ|p;���$&#x13;x�P8&#x1a;͐�[&#x1f;�8]~�&#x13;�&#xd;
Vp��_�`�/&#x7f;&apos;g&#x18;�&#x14;&#x11;y�&gt;|&#x8;&#x6;!d��&#x14;�&#x7f;ؗ�N�C翢�ˊ&#xe;����{3�&#x10;&#x10;�&#x10;�,@�hd�a2.�5-�������&#xf;��rV���&#xd;
�&#x15;��&#x0;��&amp;7d��[��Zɍ��4��&#xb;��w���aLk=Jժ,��&#x2;�V&#x1a;:�E�h�K�T]2&#xb;��?&#x1;��&#xb;��&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/8629a61d-8cac-4b79-8dc1-6cb8ec9996ee/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mP�j�0&#x10;�&#x17;�#��%ǷB	�МB&#xb;�&#x14;YZc��@vBҐ&#x7f;��͡��aA�3����r��Ԥ&#x3;&#x1b;��lH��cmٺ�{��5TY&apos;鶩&#x4;&#x5;����(�h�&#x4;v	��l��!�`�i�͑���Z�b��;2ϐf$�Zm���&#x18;�*$���亰�[N)�\*M�BIs&#xd;
���×i&amp;�&#x19;ap5�&gt;Sw!A;^~�&#x13;c&#xd;
Vp�|��h��&#x7f;7g&#x18;��&#x10;y&#x19;?C�&#x16;!d.��&#x7f;ؗɍ�S&#x13;��}hE�����&#x1d;&#x6;��&apos;�`g w4��8Z��&#x1a;�&lt;&#x1f;Q�����WP�&#xd;
�&#x15;X�&#x2;�������&#x18;qgC\+�&#x11;8B�À;t�wT�&#x18;`X�v�)��\S&#x1;eIU&#x5;&#xd;���PYIhL)�&#x3;A�_&#x11;D&lt;7�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/0f5fcf1d-6ef7-4ac3-9b82-ec42a12743b6/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-26" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�Y&#xb;o��&#x11;�+&#x4;�+Z�T�&#x12;&#x1f;B��&#x1c;9NZ�u�8N/&#xe;�%w)m���.%�&#x2;���,)Z��\r��&#xe;E�&#x4;!g���oV�L���92ْ��&lt;09���#��B�J�,�|&#x1a;%V&#x1c;��e{A&#x18;��m&apos;�&#x2;o*&#x18;Q�*&apos;D�&#x16;��ږ&#x1d;XN�֎G�=�݁&#x13;9?&#x0;�		���?0I]�&lt;�&#x1f;��O&amp;&#x11;�+��F�&amp;�Q`&#x5;&gt;|�4&lt;��i��&#x1d;�.�	�&#x10;�JR �K.XV�noo���&#x1e;8@�\�9Y�{�&#x2;��J&#x0;eZ���&#x0;	8UV�b&#xf;�m�V�8�hׁo&#x15;r���&#xb;R�,&#x7;�`9#��w�&#x11;Y�&#x15;��&#x17;�F�j&amp;xE9~S�*eR�&#x14;&#x11;�-/�T��͑3�]/&#xc;}߆?&#x7;�&#x4;&#x16;�B�&gt;�ɐ�.��a&#x14;[��Q���в&#x13;���&#x1f;���`c�$�_�n�&#xc;Y&#x10;X.�&lt;��&#x5;&#x16;�cxMB:�ih�6��WR&#x1d;��勪&#x1;��p&#x1d;&#x7;&#x12;&#x15;����&#x18;}�&#x0;�၉&#x16;�&amp;���&quot;uΔ&gt;xQ��Ns^Jxpm�&#x0;|���,������ �L�%�&#x1a;��&#x1;&#x5;���3&quot;�&#x12;��f���6&quot;&#x15;�ŀ�J�r~�ʹZt\p&#x14;K!\.�(a&#xd;�N/�˪RLh��ǃ&#xf;N�Eޗ�&#x1e;~���&#x7f; ��u��n&#x10;&#xf;!dV�\&#x0;϶��(z	�9+����F��&#xf;�De&#x7f;����&lt;й��+&lt;&#x58b;����5&gt;�An�9�x��&#x1d;����&#x1c;&#x8;h6&#x1c;Z~�&#x12;+r��&#x2;_�$&#x1c;zv�\؉�K.���a���(���W ��&apos;�F�gg���6���Ϭ8���x�#1�C/��̝�u��&#x6;��:��l�)NOW�_R������xIxN�&#x1c;DU�a�t	U��?��¤�&#x18;�l��`�ڟ�.u���E]&#x1e;�^lJ���hQ��&#xf;&#x1f;A&#x18;���&#x15;(K��J����(&#x2;ぁ�P&#xd;ɧ�&#x16;i��N&#x18;�&#x11;�G� &#x7f;�V2$T&#x2;��z�ʆ��u��t�_R�|m�`ۢ�(��&#x18;���u�:�)I&#x17;��p�;&#x4;����#&apos;F��1:}�&#x13;���&#xe;��J�&#xe;*&#x3;�$���:��lv�?����y�z&lt;򯝭�y��}��!&#x1d;�L4X�K6�&quot;y�OF@[&#xc;�v�&#x6;ZP�T�h�����;���^r0�J^��݉O�&#x1e;�:5S�k�PZ&#x17;3Lu&amp;�&lt;eg$���&#x7f;���]&quot;/;���&#x10;��)&#x12;�4�\��K&#x17;��h��&#x5;u&#x16;T&apos;j�K&quot;�:&#xc;Z����tvqzlL&#x7f;xwr8t�W㿽��k��=�fu&#x2;&#xf;O�7G��aW����DwhQe&#x1c;u��{nE��&#x12;��g���ĝ&#x1c;���t�ɥ�2�����.�!�&#x1c;b&#x1d;���X;^1Bs&#x0;&#x6;�(#�&#x4;FBI&#xd;鏡	y�d*x�&quot;1Sg�&#x1f;��d\��&#x18;ǂ�&#xb;�J#���e��	���Ȏ&#x2;�K&#xc;���&lt;F�&#xe;����yqF���&#x14;�㩎&#x1;*�R�t&gt;�MAy&#x11;�&#x6;&lt;:6��=�n���=��cϳ�&#x1f;��1ﺤ�OG�&#x4;�&#x1b;&#xc;\���=&#x8;=��?ꐬc[���N&#xc;&#xb;�g&#x17;�T��R&gt;���ד�c㘽�Dʌ�{�{d2Ǧ��&#x1c;�8�7�k�і�^����������ܫ��^�A]eWW/!��Y]I&#xe;�뫫r��&#x1;/�k���N&#x1d;�z4&quot;IĲ �cֽ̀&#x1d;P0��O��&#x13;�_�_]���&#x3;�&quot;˝��&#xf;�`h?L����=I�&#xb;%&#x0;p��%J֖JHx��KN&#x11;�B��6�I�&#x18;�/&#x0;p8vdci�&#x0;t,��	&#x1;&#x10;j�&#x1a;ZMZ&#x8;��y&#x6;�s��	B���&#x2;HE��,��欝&#x16;�&#x5;ں�`���&#xd;z�J�&#x1;(�&#x1;��&#x1d;�&#x4;��&#xd;А�%0��&#x16;��&#xc;U�,^�:�KR������&#xd;
O&#x1d;Պ�&#x7f;y{�&#x1f;z��VD�}��i&#x8;T�-�Р��XI&#xe;�*&#x7;L���f�S\��g��Qh�w-&#x1c;gSl���&#x13;�&#xc;&#xd;�K�&amp;&#x17;��`]$&#x1a;&#x13;�&lt;h&#xb;cܯ�+�U�k���&lt;s&#x6;x&#x7f;&#x5;&#x10;k��円@���j&#x5;�&#x7f;��~&#x1f;�O{&#x12;�&#x5;�&#x14;�B�[�&#xd;
��3ǖ{H�&amp;W�&#xb;&#xc;��&#x8;훳�)��ٻ�&#x1f;�5^������ah�&#x13;͡m��966&#x7fb;X���-&#x0;ڷ&quot;�&#x1c;�Fr��r�i�juB�yC��k8�i��&#x13;�N�GW.ȴc#&#x1c;x&apos;0&#x1c;��0�h�&#x0;&quot;�&#x2;h�&#xb;�&#x19;&#x13;&#x3;��&#x7;0���cMR�֘�~4&#xc;&#x1;�o�$ùnЪ� ��|���tΰt���!&quot;���&#x19;�72&#x3;�I�O�R2&#x5;���&#x0;���z�P&#xd;
���3�iAl��|�!e�ˀADJ�T&#x1a;$�,c�zu0���&#x13;�Dc&#x5;����&#x4;u�Y&#x7f;&#x1;�&#x16;�1�iU��&#x2;&#x4;Cm�s0&#x8b;&#x5;Ko&#x1e;D&#x1e;��&#xd;&#x4;B���&#x1e;N�~$�&#xe;&quot;�&#x11;����s�nTV�;�&#x10;$�7��i+����&#x16;oˊϱ&#x14;�&#x2;��,SȽ�_�U&#x3;&#x10;l�V)�x��&#x10;L&#x4;p&#x14;�&#x12;�D����C�&#x12;��δ���9L��&lt;��yάĢ�^&#x16;�,&#x4;��wF���&#x7;-�G�s�r��b�&#x14;�&#x1c;��=�¨h&apos;�A%��w�ǚ&#x5;�+��sl&#x10;�-r,�&#x10;�8?�&#x15;�#9z�l�Z&#xd;ڭ&#x7;�Z������&gt;�&gt;k/,P�?���&#x1e;5�F��&#x1b;]&apos;�]O�&lt;�.$�&quot;�u��3���&#x1b;��ZX���QϷ����&quot;��R�&#x15;�=N?&#x0;��s&#x7f;Y1��	�:C��Y7lm&quot;�%G�&apos;&#x1d;��*�]�n�{s�qp_r�j�.��._&#xc;�ѪJC-�2dSוP&#x12;ޘ��Y��QeƤzu�/x1�q�&#x1f;&#xd;�&#x8;3&#x16;��n]�&quot;���&#x1;$��y�&#xe;�=&#x19;&#x6;�C=&#x3;�&#x16;U�^�n:K�{o����&#xf;�&#xd;�3���&#x7f;��o{��~&#x1f;�1Ɲ6��1[�&apos;&#x17;��O�ҋ&#x7;��֜�[r�&#xc;��Z&#x1a;�.�-��LT��e8�]$K�&#x4;�2���&quot;���J&#x18;P�&#xb;���׃G��&#x18;��=&#x7f;&#x3;&#x1f;&#x1;�M�]&gt;&#x13;�0�&#xf;�߫�.�&#x1c;�4`&#x0;PV�j���2p&#x10;�&#x1e;�3����&#x0;�[{�&#x7f;��`x&#xc;&#x14;�2�&#xf;�]S�4��n&apos;�y&#x1b;�u�1c&#x5;�Q�$�I&#x10;��F�,�&#x6;9XC�ȶe�I�&#xb;�X�&apos;���-,��r+�l쒺7����e���t&lt;퉟�yQ[�&#xf;$)&#x17;.N&#xd;
��:&#x1a;8�R�)%�5^��EՔ�B�&#xf;�:x�&#x8;�&#x2;:eK&#x0;&#x1e;)-v��&#x7;�&#x19;�����{c&#x8;܃�&#x16;X7s�	|7��M����&#x10;��T�,&#xd;
�&#xf;F}&#xb;��#`�J&#xb;�7b&#x18;����M&#x2;X��&#xd;
�&#x16;��t�0�5��5i����k�aw��&#x6;���N�Ů��.�&lt;&#x6;B�0�[q�V&lt;�I�yN&#x18;;&#x1;��Nt�&#xf;�^t&#x1;�Y(Kcn�� 8�t��&#x1;��v]&#x13;�Ly/r&#x8;&#x7f;���AB�$&#xd;
&#x3;�&#xf;����Ե&#x12;&#xd;
OA�?eƁ&#x17;�.N�w�&#x6;���J�&#x1f;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/93a01e70-b4ff-4d8b-96cc-036797c00bed/event/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-28" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mQAn� &#x10;�&#xb;�`&#x1;6^&#x5f7;JU�&#x1c;�S�J�T&#x18;62&#x12;6&#x16;&amp;Q�(&#x7f;�:͡U�&#x1;igg�����yBֲ&#x1e;M�=[1�*&#x1;+��p�&#x1a;�+�&#x1b;�j&#xe;�ZZU��9�ڄ&amp;�8&gt;��h(�&#x4;&#x17;5��&#x13;�J�V���߉y�4&#x13;��Պ�i&#xd;
��&#x6;Y{a&amp;��g���&#x16;�SS󺢑���۸�����&#x3;&#xd;
�5�a��}�}&lt;��g&#x0;�($A��S0�&#x5ff;�#�.&amp;B��&#xf;�&#x10;D̼�i��}�l&#x1c;&#x1e;;�m��0&#x1f;�|o�&#x11;&#x3;�	&#x3;�&#x19;ٕ��9D㖽��w�o��v�˨&#x14;�X&amp;(��&#x6;�a@�$Wl&amp;�k��-�&#xb;×�h�`&#x17;��W&#x1a;���o�&#x0;h(KYs��&gt;���7�&#x1;xٔ؁.�EŮ_F�&#x13;5�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/37e40e5a-5285-47b7-aa26-77e51c2308dd/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-29" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
m��j�0&#x10;��E�Ȭeٲ}+�@&#xe;�)m����&#xd;&#x16;Ȗ���4�ݻv{hiu&#x10;h������|&#x1d;���C&#x1d;�m�w�ʵ(�RVܔ�p�%7 ��,��&amp;��B&#x13;k&#x13;����Qϋ�&#x0;&#x1;&#x1c;*��&#x3;4-@+E&amp;�z#�i&quot;��r��8&#x6;o�F�ޘN��3���&#x16;�K]�JR�9��v��&#x17;*&#x10;t�PT&#x1a;t��[��&#x18;/?�R&#x19;d9I�Oc�ח��3&#xe;.&amp;R��&#xf;a&#x19;���&#x18;S�&#xf;}&#x19;m�&#x1f;����^I�Og�&#xc;��a�@z&#x80;zBv&apos;#}&#xd;Q�e�8-�w���~&#x7f;�&#x15;4�&#xc;�&#xe;Z�&#xd;
&#xe;).:�&amp;&#xd;
��&gt;�&#xb;�1|&#x1e;&#x8;��L���S�&#xd;&#x1e;�y]�R�*���&#x2;˒�&#x1a;&#xd;�E�xQ&#x17;hTY�E��&#xd;&#x5;|&#xd;
�&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/1a233546-b509-4df5-b04e-0452bcb1893a/health/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-30" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�]&#xb;s��v�+&#x1c;Τ��&#x8;Ⱦ&#x1f;��6�H�n-ױ,;�V�&#x3;&#x2;K&#x12;5&#x8;�&#x2;�&#x1e;�����bAQ&#x16;�XW�c&apos;p����y��&#x1;�����\����^�e&#x12;����&#xc;VE��L5�&#x1b;�	4aʸ��&#x6;:B���H&#x6;��Y�`θ�Q�&#x13;&#x5;}��DuZ䓨�&#x13;&#x12;DP�D��K$�1ڧ2T��&#x1d;z������}�7���,������aT�˴6q�)�$&#x17;J&#x4;����&amp;͒&apos;��&#x17;	D��$&#x12;��he�&#x1e;���&#x17;&#x17;��&#xf;�&#xc;Q��*I�u&#x16;]���rf�(���-Ͳ&#x8;��g=/�UG�u\�F��a�`��:����(�M&#x6;���LT��&#x7;�(�̊(�rUu����xo�*y��{&#x18;S&#x15;ٙI&amp;Y�����˪6�&#x17;EQ�pz�&#x14;(9=��)�w\&#x17;�9==L3�¬�*����i~��a���F�D��1�b��h��\̵�&#x1d;�,��0�2`z&#xe;㯄$&quot;$8�,��#h��En��%4={�d�d48(�uQ6��&#x1b;�DU}�E&#xb;�&#x1;}�{0)�t��M��$	�XD\&#x1a;�g(�&#xc;:-b�n&#x15;&#x3;��P()���x��&amp;{���1T��� ��xA&#x12;�ҍm����X���,�&#x96;*��T��7��B�9���~ٜe��8�L	�M&#x16;�+&#x3;;�jDB��D&#x2;v�&amp;{&#xd;
�r�i|��&#x18;6$&#xd;9�f�R��u��k8��&#xc;�!��g�&#x1;vvk&#xd;�&#x1f;u��=&#xf;&apos;�:]&#x19;7&apos;��-�h!&#x16;*�&#x14;L���2y2&#x1;�&#x4;����&#x6;:��|�����&#xf;ΓQ����&#x12;H-�s#gF&quot;�3lO�&apos;yb.��o���MV0X��&#x7f;9V�`p^�R0�q&#x1d;���Vf&#x5;�t&#x14;�Ako�Cܱ&#x1d;��&#x19;�?&#x10;�ӑ�l��Ta�&#xe;�&#x1f;&#x6;l&quot;&#x6;&#x7f;�)&#x1e;���f�Δp�ZV���&lt;�J�V&#xd;
L&lt;��C$�&#x16;#q��&#x18;&#x1f;�fXr�H�&#x0;��T�)a�r�&#x10;g�É�&#x1c;2&lt;�L&#x1c;&#x1e;j�&#xc;&#x0;?��5��&#x1e;B#&#x58c;&#x1c;p�)�(�&#x10;d��ң&#x3;qHƣ�&#x14;����C���s�װU�&#x8;XZ&#x1d;N&#x5;&#x7;&#xf;&#x19;�C�1E�	&#x19;&#x1f;L&apos;&#x7;h&lt;�v&#x4;���|��&#xd;ړ&#x1c;+&#xd;
��=L&#x14;��${�&#xb;0�#���*GR��&amp;�$&#x10;AQ�&#x17;4����&#x16;���\)�)AYC&#x1;3��&#x12;!l��=�%ъ#W�}M4��&#x15;8Ҩ��f&#xc;;�`�)�-M0n�%S����XK��&#x6;!&#x15;n&#x7;&#xb;)�&#x12;&#xd;�`U�ZZ(�փ.��&#x13;q�5&#x17;�`���D74WBq������^\&#x13;��&#x6;�(Xy[`�&#x2;d�ҋ!0ӠL�-0�Q[P S3�Ԛ�X^g�s$&#x18;�&#x16;�F�6&#x15;(�OF@q��mAA:�|/�%&quot;��+��o`�q̶4ݮ!��j�&#x94;j�&#xd;f%&#x11;-ö���$V&#x2;t�g&quot;��&#x1a;H�&#xe;&#x5;ްgH`Ю&quot;t[&#x0;�嶠�lP@{��i&#x10;x��#�&#x3;�&#x12;l�؞�}c��=`[�u����N�y��c���H	���&#xd;
��}A��PrU��]��B���&gt;�&#x19;&gt;��&#x7;@&#xc;��@,�����l7�Q��L	`�;�a6�?l.���&#x4;��&#x8;\e7�Ќ�����H��&#xe;�&#xc;V7&#x19;!!�I\�&#x12;#�C#$����ˈJ&#x8;�b���&#x8;��&#x8;&#xd;
&#x15;��ތĲ3���0&quot;�|�=�B4&#x11;]|�&gt;�|�&#xc;��A&#x13;��&#x8;1&#x2;�&amp;�&#x3;&#x1;2��&#xf;���&#x0;�)&#x1c;�&#x2;�&#x7f;Ռ؅��8F�&#x1;&#x1f;O�!�06&#x11;�&#x11;��	�!&#x10;��&#x12;�?k.Kq&#x1b;� �0&#x8;�&gt;�&quot;�4�!�#��vۂB�M&#x19;&#x8;���XYxۅ&#xd;
�ڠ�&#x14;�Tx��&#xf;�&#x0;�)o�?�8���&#x11;�Z~j(L��.�,%�H�4��u~�0�誀��&#x4;b;8�U���n�&#x6;��Z�\eq�Ew,&#xd;
B��K�*��rOB��=I�K&#x3;�&#x4;-��V�&#x12;�J&#xd;&amp;P���x@i��&#x11;&#x18;&#xc;δ�z&#xf;n= 1�֪IB�Ϲ�&#xd;)&#x10;�ґ�1A}��`ґ֔�`�&#x6;&#x16;��7�wnv*&#x1;���&#x4;��&#x1b;&#x12;�b��f�&#xe;�Z��&#x16;&#x1b;&#xd;
&#xe;���&#x4;t��bI�&#x18;���&#xd;IA]�z�+?��&#x6;��$t�&#x1e;$��Z��T���;�&#x1f;�L&#x1e;��H�&gt;&#x1e;�&#x10;{C�9h�&#x1b;�*@&#x1;\?,&quot;E&#x1d;��&#x1;&#x7f;�s]�&#x1b;���C&gt;[G���:�_}eFp�F`_ݗ�;&quot;R܉H&#x5;&quot;�ތ�&#xd;��ND����f���=$�!�7&#x1b;�zH�ױh&#xf;I�_����7{&#xf;I{g�&#x3;$&#x5;&#x7;�&#xc;H��&#xd;
�`Z��ޑR�&#x1e;&#x14;��N&#x1c;H���p&#x14;�g�e��$�?�b&#x12;&#x7f;mF:~&#x0;�CN9�7#wC�Rt&#x1;RJ����&#x13; �&#x1d;/�q�!�ݟ�&#x1e;����&#x7;��l��&#x1;�_Ǣ= �~��&#x3;���= ��&#xe;��G\}&#x6; �&lt;$p0(�&#xd;HyH&#x19;�&#xf;��ݎ7�&lt;���.����/�n�v���&#x1c;��I&#x7;(%!&#x0;&#x8;yoN����v��D&#x0;���?&apos;w{O�:&#x7f;�M)&#x15;��ǥ=.�q�7&#x1b;�z\�ױh�K�_����7{�K{g�ˋRe����*&#x4;�&#xd;
»q)&#xe;1}������$X�:�њ�/�~��u&#x1c;d��+3�:�&#x17;&#xe;�&#x12;�ތ�&#xd;��&#xe;Ӡ�&#xd;
���ȝ ��|u&#xc;!�&#x1;&#x18;�&#x11;i�H{D��F�&#x1e;��u,�#���z=&quot;���#�ޙ&gt;&#x13;�ZL&#x1a;g)�Bw���\R0X@&#xc;�&#x1;Sf&#x16;(�e@&#x15;530&#x1e;�&#xd;�85?K�&quot;_�0���{`�E�W�ƺ�ޛ&#x18;�&#x13;�e&#x10;&#x13;&#x14;&#x5;L�y�g�&#x4;�F4�FC��&gt;&#xc;�]8���c���g;.��R���g���f7�$�M9:&#x3;�&#x1d;�2`&#x15;0�q&#x17;ΖunJ�&#x1f;X�.�٦UP�ɲ�k��&#x15;�&amp;?�����F�A{���V�6��&#x15;��ܵ�;&#x8;jlq��&#x7f;&#x13;,Zo��(��up*&#x10;l/&gt;&#x3;�Xol���Xkۊ�=O`;J}d�&#xd;&#x0;4w_��a4Z���p_80g&#x19;�C�&quot;&#x1;�^����J&#x4;@��Q�4�&#xd;�&#x11;{�PF�e���6&amp;9z��C�P6&#x17;�ɭv�0�eT&#x1d;&#x1d;�&#x2;�&#x1;q|&lt;�&#x12;dKі�!��-ޡ}�ѫ_�D[5=&#x1e;Z�&#x15;&#xe;n�9��,�_&#x13;���ݚ)6kS�M&#x1d;/&#x1b;c���&#xdfb;U�&amp;��)��z���5��(��7+�Ⱥ&#xc;���&#x18;**S���y&#xe;��(�?�ct�2�}�y3���g���z&#x1a;XN�m����ո&quot; �2q&#x1b;&#x15;�tT^:7h�3&lt;&#x1e;&#x1d;&#x1d;�&lt;{48����c����&#x7f;�&#x1c;&#x0;&#x1e;&#x7f;j�Q���3̟⟧���.�T&#x1f;&#x1f;Oܽ�ea/�}�9w��a��9&#x17;�&#xb;;�L��ݧIk���&#x12;���*&#xf;&#xd;
p�&#x1e;�����4�R{v&lt;6Q���&#x17;�(��c�Dk���õ�Tq������[t��ſ&#xd;N&#x1e;O&#x6;��h�L�j &#x8;�&#x1e;K���&#x10;]&#x0;:&#x12;�\2�ʾ��������2\&#x1d;��&#x8;��r�bt�| qW&#x4;C&#x1b;`t&#x0;��J��&#xe;\�A�-�zSrգ�&amp;�&#x1c;�˼�ޟ&gt;���넛&#xe;��q�&#x2;&#x19;@�������(���=)?֛����9,��&#xc;�~!��0J��*�	ƟV&#x19;Du������S�?&#x1f;�Z��j�]�ׯ�&#x19;+&#xc;��&#xd;
_\�?�&#x2;w����_��:��c����&gt;�]&#x15;��9*a�&#x1b;��N�zi㼍�M�c�.�����&gt;���&#xd;
I��[A@ź2���4)���s&#x13;���&#xe;����&#x16;�+��&#x13;8Z�7ϛ���&apos;&#x0;��}&#xd;
&#x1d;m�6�&#x11;��ϐ&#xd;
���$�:� N��:���JPQ��m;&#x14;�:Hs�&#x1e;%gQ&#x1e;��it��mK5lu7�~�&#x1;�&#x13;�@�Q�ކ�&#x1a;&#x12;&quot;&#x10;�x&#x19;�.�j&quot;�,�Xe?(`yo�&#x2;�����&#x18;�E�&#xe;&#x11;�t�&#x1c;ِ{�yV�k�(&#x7;k����`�&#x13;&#x7;&#x13;Hy�.&#x6;�m+��v�֗������&#x11;�9�X�=&#xf;�:������&#x1c;&#x12;�VzW&#x1e;�8�V�|��5�©����ᣈn0�:��6Y�&gt;���&#x7be;�2�Y����v�K���Ҽ�욥���X�?u=���&gt;V&#x1d;��;&#x1b;���&amp;&#x1;�j)�&#x2;�&#x16;e6ݬ:g�c���F�b&#x13;-v�,|s&#x1a;m&#x10;��(7&gt;�a;]�Q&#x4;�bR��ͷ3&lt;��@F�&#x18;p&#xd;
o.�&#xf;]&#x16;&#x1f;&#x2;*y&#x7;�:�����b���&#x1f;��^���.lİIҳ���4Y&#x18;{t=���6����������&#x4;.]�ۖ���E�.�d��2\�5��[6&#x3;���&#x18;~ܣ���&#x1d;&gt;�w�ɬpI��ύ;�|&#x1a;���9��&#x12;�9�69�[����i&#x14;���&#x14;�&#x1;&#x1c;@&#x0;jgi&#x6;J8X���G��V�&#x1b;&quot;p���:�6�����&#x19;(��҅U�&#xf;�&#x13;�&#x17;�&#xf;d&#xc;&#x1c;ے=g��[��&#x5;@�t��.+�@��6&apos;���m[Ul &#x5;kۊ&#x1a;$n�6��&#x8;`({��I�&#x1a;ӹ�=�&#x1a;y�����&#x2;P#t^&#x14;�&quot;3�,H��] �DV&#xf;���G6T&#xc;�8.~&#x5;=7]^��rbj�c�~3�OލV&#xd;�&#xf;�r1��G�&#xb;��2��6@4�6��q��&#x17;O���Q������a3u&#x8;���f��l&#x1e;��Ϳ��2��?���&#xe;$��&#x1d;&#x1e;���&#x1f;&#x18;�T�Iev*?x�q;*r�7ږ�b&#x19;�E�&#x15;���]��i�&#x10;�&#xe;RVqaq&#xf;�&#x2;�-|�&gt;����	�ڟ{�ձ&#x7;[�g�6��v��]�Sҿ&#x16;n��}Աwu��Sz��e&#x0;2&#x6;E&gt;��Q=�6�uQ�&#x15;����&#x17;�|�b&gt;�&#x14;���&#x5;��&#xb;��?&#x1b;k&quot;�c!�_?��&#x10;�Q7��&#x8;6Γ&#x6;�o�&#x1;��&#x1d;&#x6;�R&#x14;y�6�4}����M���&#xd;�3���U�71��*&#x13;&#x8;3&#x18;yi�&#x0;e6	^�,��v]R&#x1d;�oV�×�;3����&#x6;&#x10;.&#x6;;&#x12;&#xd;�e�r�&#xc;�6�љ�&#x15;PkV�[Me�]&#xe;�r&#x0;G�*���.�����&#x1a;&#x1c;_��&#x7;�&#x8;�����&#x13;�&#xe;8?$ߪ�N�&#x5;&#x8;9&#x0;&#x0;P&#x7;&gt;�&#x19;��&#xb;&#x3;&#x6;&#x2;Ճx�x7:�&#x18;�ڭY�����ٌY���&gt;��R�j&#x7f;�&#x1e;�~_&#x7;#�vfp&#xe;�ѹ$���r&apos;_&#xc;��&#x12;t��6��v�Q�d&#x1b;&#xb;?[�[NA�&#x10;���rǏ���.6&gt;�6&#x10;������Ѷ��p�Z&#x7;�&#x1f;p�/�`&#x1f;��*���mBf���ߢ,6yr�֯�/��ܼ���3H&lt;�du}^&#x16;ڝ�&#x15;q��s[&#x17;�J֚�z�&#x8;�`D(҆���&#xd;
n&#x1b;T5d&#x16;+�&#xb;�~&#x0;��l�Z�&#x1;��6�	��qt�&#x1;&#x2;�&#x3;��d&#x1d;ЩM�&#x1a;�]=&amp;�m�˓K7Я�Ѐ�W�{��&amp;�&quot;�&#x4;�&#x0;S&#xc;p{�&#x15;���,��&#x14;K����&lt;�	�e��칬&#x3;�sC�	�Ö�cP�[[�v&#x1d;�gVW,K��&#x1;X&#x16;��Δ&#x14;&#x1;�3&#x15;0&#x12;�`�&#x0;%$VTiA5!&#x16;�~�&#x7f;�[7c~q&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/13459763-9a0b-44a7-aec4-d15458b391d8/third-party-modules/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-27" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�}	o�H��_1&#xc;�b&#x16;(��&gt;&#x12;3�&#x1d;������tYyt�d#AI��N]MR&gt;���}_P�&#xf;�T�*�Nc��i�&#x14;/L&gt;��{/��_���yq��x2&#x1b;-�E}��q9���5�&#x5;&#x1a;�^1��=&amp;��&#xd;�Q�S�&#xd;�B�&#x3;�;���)gS�7�&quot;&#x4;&#x11;�C���{�� �&#x13;��&#x7f;�̻��a��&#x1b;��q&gt;���a���o~9Ϋ�m�&#x14;�fQŋ&lt;(�&#x13;&#xc;~e�(ǣ���H &#x2;��D&#x2;i�O��PV�����句&lt;A&apos;&#x18;�Fe=&#x1f;�&#x1f;���b:�U0r&gt;�{9&#x1e;�0&#x4;3��Y5I�~�&#xf;g&#x13;3(��}&#x11;�7����o��&#x18;�xU���.�������,&#x1f;�����&#x7f;؈��&#x7f;��f�z��I�PDn�����%e&gt;&#x1a;�)�&#xe;�3�95R3��W&#x18;�&#xc;��&#x8;��&#x7f;��	A�H�Ud����b�W&#x10;�Ӄ&#x1f;e�j&gt;�����Æ�i3&#x1a;�O��&#x15;c���l��U��&#x13;�&#xc;&#xb;�c��#6�.C�S��-�&quot;[R&#xd;
z��&amp;]��a5�g��ѧ&#x12;�t_?g�&apos;&#x7f;u��(9qgg�x�ZT�&#xc; �f�&#x8;A&lt;&quot;J�L&#x4;b��&#x2;k�-Ӂc�v���ܯ�gM�&apos;��dp&#x0;v�a��&#xc;+��V&#xd;
)i�&#xc;Hr-�&#x8;J&#x8;�&#x1d;R��}4�� �.���.��		r�0&#x13;Z&#x1a;&#x19;���&#x13;�QF�3&#xc;Di&#x5;��&#x1e;���&#x17;]�j&#x12;̭&#x8;�Y�&#xc;9A��&lt;�!&#x8;b�&#xb;�r�&#x2;&#xf;փ�_�Ć3&amp;�~����vV�8[S^��&#x15;5�9M-ג&#x19;�6&lt;s��&#xc;i&#x13;�v��}���̮&#x7b3;&#x4;o�&#x1c;��:�!P��&#x16;&#xb;&amp;]&#x6;�Mf9s�Y&#xf;�&#x1c;�ʚj&#x3;�&#x1e;�-����wyې:�ab���[+Q@^&#xb;�&apos;JxN����I������oƋ&#x14;sk�k�&#x4;a�J�&quot;��&#x7;��n!8�������&#xe;��y��R/ ;R�q�&#x15;��Y&#x16;2�Qb&#x10;�&#x2;D�UlZ���v�7�&#xb;�tҼ��n��H`�1&#x1f;���e�B4S�A�`�c��&#x13;��������&#xf;��	���iS-&#x12;^&#xd;
��&#x3;�)N&#x15;&#x6;&#x5;fVA�&#x15;8x�!)���&#x1b;e{&amp;�����&#x12;3�%��#)��D�]	x�6V��Z� �&#x8;&#x3;&#x3;�	���V�&#x245d;`zB&#x0;.&#x1;�;X�bx&#x1f;��&#xf;&#x17;�O�}�U�&#x8b;iSN���zd&#x2;�&#x16;&#x12;&#x7f;p�gDA|&#x1;g	�&quot;�m��e�_�O�]�8]ޢÞ&#x14;�:k@&#x7f;���&#x10;E&#x15;%4#�;p �&#x1d;�&#x1a;G���b&lt;Op��t8sAKn�)�&#x8;�&#xc;�0pc�m����&#x18;�q�Ɩ&#x16;�taT&#x1b;]� Ek�&lt;�&#xd;
q&#x1;*��so�s�Ɔ &#x1f;&#xe;�ݠe�*&apos;eS�&#x15;uB��)�)�yՐ1&#x1c;�&#xc;c��^&#x5;-���&#x2;jf&#x12;Si��J�܏�&#x17;&#xe;��%�&#xc;�XRN,bހ�&#x18;L&#x1;�&#x12;�Q&#x1f;��&#x10;&#x4;���_ ��&#x16;&#x7f;ل���&#x10;�1N	&amp;&#x0;b�&#x16;�Y�&#x10;0N&#x14;ጿ���csZ�4U���&#xe;&lt;e�Ő\@~�&#x1;&#x12;�n9�S�|I����%t�i�(s`��R$&lt;&#x3;&gt;&#x19;q:��h���@�&#xc;���3��y:�M&amp;�|�&#x5;�n�&#x2;�n!&#x1;&#xb;&#xf;\9�&#x10;u&#x1a;��Ha_��ﲟ�&#x8;l6����&#x14;�&#x13;	JD&#xc;s&#xe;&#x5;&#x11;C�8a៵�&#x1f;&#x12;)��o�Ӟh&#x1d;�&#x7;�&#xb;��&#xc;��&#x1e;&#x1;�&#x2;8���xFU&#x10;���&#x1b;^�Ln�4�[�^��x&#x0;�G&#x1d;&#x15;&quot;8�&#x0;&#x5;$���&#x8;E��&#x1d;5�~��o��q9HE�&#xd;��&#x7;&#x18;`)DV��.&#x4;f���&gt;,R]�8�I&#x10;HJ&#x1a;4&#x13;X3�q��X���WIM.�&quot;�GM��0��:��h�]4~C&#x4;,,X�&#x1d;� 8P�HG�H�Qg!X(�&#x1;{B�7�P+�$�&#x12;�񮤺&#x1f;_?�t&#x7f;�f�jN&#x0;W����KB�c�%&quot;s&#x1e;S�H��l7|�o뤽��&quot;�&#x19;{�u�&#x6;5&#x0;&#x7f;�&#x2;&#x5;f���MpPfk�47��M�W�o�̿���%��ֱ8��%8C&#x0;�a�&#x5;ة&#x4;�&lt;d&#x19;&#x11;a{�i�&#xd;
��֟�%U[&#x3;&#x1e;N��&#x1c;�5����d�&#x18;&#x8;Q&#x16;r#�&#x19;�Tet�7�+��v8�R��&#x15;��W�y�$Ե�&quot;,=sYF&#x19;�&lt;P�Yt{�b&#x7f;G&#x1d;�&amp;[z(kJ�9�&#x1d;��I1&#x16;&#x1c;�&#xb;��8T�&#x6;&#x2;&#x1c;ڡ���v�&#x1c;:�&#x1b;�~7)&amp;W�t�_��xp�&#xc;&#x7;&#x8;���PH��pΡֈF�&#xe;�!�jv���&#x4;�kJ��ɰ&#x14;&#x1c;&#x11;N&#xd;&#x13; :��R&#x1e;��&#x6;�&#xd;
�ۙۻ�7��W��&#x14;wkR�Wƃ �{&amp;&#x10;7�9&#x19;���PA&#x0;֔�&#x1c;*&amp;&#x5f7;����֔�V��uF1&quot;��*�kΡ��N)&#xe;i�P�-��&apos;�|��&#x7f;&#x7f;ZN0�	��4&amp;�&#xe;В�&#x2;�L&#x7;&#x1;�7&#x12;V�&#x0;eN���@],Y�T;`M�B:�&#x11;H�_x���&#x1a;9&#x8;����nG�vO�f�&quot;&#x19;����&#x18;b5䰐�LpG�D�SO�!4�&#x5;4�v����$c�d�Z���&#x6;�bju�(�&#x5;a��L�%X��&#xe;O�n&#x1b;���&#xf;���4�&#x18;�,�)w����%�)�&#x2;&#xd;�Y&#x6;��EA&#x3;�3z{D�R��O�vM�r���kA!3d��2.,h�BA�QI���:�μ��ni���TO�[�&#x1c;�De�J�Lơ��&#x0;�&#x14;�;@O&#x7;L&#xd;��U�q��%V� GA�7&#x12;e�� %-�&#x1;]�`�G&#x19;&gt;�g~�_�T�fQ�a�&#x3;�DȌt\&#x19;f��&#xc;x)%,8��ax&#x7;��{UgDG8��_�w���Z��&#x8;�&#x3;�D�x&#x1b;K&#x1c;�&#x11;�&#x11;�u���D���M*G�Ý^��T)&#xf;&#x12;�&#x6;!�lp�&#x5;&#x6;��D&#x8;zG5�&#x7f; �|{�&#x6;�n���ߎ�&#x1;#p&apos;3��v&#x12;&lt;1hb�&apos;�&#x0;���&#x11;��y$�ܹ�~:���u2�&#x1;*�AJn3o&#x0;&#xc;i&#x1a;05�&#x19;�O�it���~��i�e�J&#xf;�&#x16;�)I&#x1b;�X\�W�&#x19;�H�&#x19;�=��}��G��4&#x12;Z&#x11;:n��W&#x19;&#x1;�C&#x1c;V�A��&#x1;\&#x13;�&#x0;�&#x70e;n��v����m1I��5�[=&#xb;*�tP&amp;8����&#xd;
��%D&amp;��xG�ݛ�O���v&#x1e;�7uz�&#x1;&#x18;&gt;#\HJ���h&#x0;�Pn&#x19;H&#x1;&#x1e;���p�@;�&#x1d;·P!&apos;&#x1c;tC�T&#x6;\�&#x18;�tl~3J&#x1c;��&#x14;Һ&#x0;�&#x11;�&#x1d;l�&amp;v����--�bz�X�4&quot;�F)����&#x1;��X�&#x10;3&#x4;~�c&#x1;}o_p�e��/O���&#x17;&amp;&#x13;,�	�ɼ&#x1c;&#x17;U��I&#xd;�{�!�[�&#x14;b&#x14;)M�t&#x1e;~&#x4;����Ǵ��U�&apos;�4-)��&#x0;�#T&#x19;�cQ&#x0;�=� �9�9�&#xb;�&#x1c;���}U6)�u�ZB�(��P�&lt;�	JH�&#x1c;�V�r�&#x5;�e��&#x1;�&#xe;�zK���&#xd;
�C�P��;H��&#x14;�&#x16;&#x12;���@iz�eն�Kx��Y���Z�&#x1f;1Aj���-9ͼ�&quot;�&#xf;���`�7&#x7f;KH,;�Y���52HW&#x0;&quot;&#x1;n&#xb;Õ��K&amp;4�*P�&#x1a;�&#x1a;�&#x12;�0�&#x11;B/��&#x13;,��&#x13;�MAo�d	z&#x1;���e��� �+&#x8;&amp;&#x0;�@�&#x1e;3�!�p$��í&#x14;ͧ�&lt;�ٚ��&#x3;����D�&#x2;X���&#x10;�V�Y&#x12;Ȯ&#xe;מ�b&#x0;��m���!u&#xd;NfDpP�&#xf;���&#x11;HW&#x19;$,�$��+ܝ����G&#xd;
�&#x14;w��_&#x13;&#x1b;5��6ӂKk&#xd;0��&#x1d;&#x2;e(&#x17;&#x1;g�둓�]�K������A��(bq��s�d�Hͬ�ZE�t@Py_N�i�^����n9�yA��&#x19;U�&#x6;c���Xp�&#x10;7�&#x1d;J�&#x17;g&amp;&#x1d;p��&lt;&#x15;q%E�&#x7;�4T&#x5;4�1ނ�(T&#x7;&#x10;�e��t��q_�&#xe;���:nK�&#x18;��&#xb;�(Ӑ�&#x2;�&#xc;&#x12;��j�q_&#x1a;T�&#x7;\ƍ&#x15;B7&#x15;�&amp;SE�&#x15;1&#xd;&#x8;$}�&#x4;vq�O��e(���&#x1a;��pR����&#x1b;6&#x2;�`T�3�,���Ό�V&#x12;�l�&#x1f;,؞���!��&amp;�a��#&#xd;
�!&#x8;&#x2;�&#x0;譌�&#x0;��TL�&#x1d;e��-&#x18;Pg��I;f��h(pj�ΰ&#xb;&#xd;
�&#x7; 6H�&#x10;@���&#x1d;��w&lt;&#x1b;&#xd;&#x1;Ħ&#x2;m;��+#�&#x5;�&#x8;�&#x8;��&#x1;��&#x1;�&#x14;�)��&#x1d;��&#x1b;���&amp;����x�1�[�rO�2&#x11;�yg&#x4;�&#xc;H&#x7;m�����l6�Uf�ϛ���e1Mu$&#x13;�����q`&#xf;�O&#x4;nC��$X�q�̖&#x1f;&#xc;��&#x1b;&#x17;�p��79�V&#x7f;�&#x13;�=&quot;&#x1;x&#x13;(�`��X�*&quot;�~�&apos;^����V�&#x13;�O��&lt;��|j�����4��Tk&#x1;e2&#x0;� ������Cs:�/�P����J%�ĤN��I�%�\���@��@!�&#x5;D��$�z�`��&#xf;OR|8�e�l&#xd;
&amp;�r�Δ��~�T�Tֻ�@��N�,&#x8;@���D��텈��&#x17;u�ߔӛ-�&gt;�; &#x19;s�&#x14;�P�wP�[@S�R�p\&#x12;�讕�߰�$�I�&#x12;&amp;�~ߒ:%##&#x14;�&#x1d;O����0&#xd;L�&#x17;&#x7;�b&#x0;�\ݿ��il��&#x1e;�&#x4;�R&#x19;�&#x2;�Na&#x1a;2&#x7;�/��c&#x8;�V&#x8;��&#xe;��&#x1d;)&#x17;�x2K�&#x17;+B�o���H9�&#x0;�Ce�q�yB��&lt;{�&#x1a;�&#x1d;J-a�)S�gC�4���8��X&#x13;&#xc;��&#x1;x�&#x10;&#x18;&#x1f;����&#x16;������+�LR�K��iW�Bp(bmP�&quot;@%-c�S8E���!&#xf;��˫w��?�ӛ&#xd;��c�!�&#x17;J&#x0;����6&#xb;A`&#xe;�FfA����fڟ7������~&#x2;��Q9�&#x13;�&#xd;
a&#x4;&#x13;&#x2;�DG&#x10;�,deE	�&#x1a;&#x5;&#x8;|�!7U7&#x10;N��n_�&#x7f;=�&#x3;��Y!=g�BZA&#x4;�&#x10;&#x18;�H&#xc;�r&#x8;|;�O�g��&lt;;;�&#x17;��ë�&#x16;Xä&#x5;&#x4;��&#x1b;18���&quot;$��&#x18;&#x16;��n�B��j-��&quot;�To&#xe;�&#xb;ŷDq��b�����۫�p򐢋㳯��V�&#xd;���J��5�&#x1a;H&#x13;���&#x6;m���&#x18;�S��)&#x1d;�a�&#x1;&#x19;8�&#x0;� �&#x1d;_Э���A�W��t&#x0;!�@\�T��&#x13;�~7֪:/��^���i�P���A&#x8;�&#x14;���@�X�&#x10;�=����eU^����8&#x1b;Rb�0&#x11;&#xd;
!&apos;㛛�p�I&#x1f;2�&#x19;�Z�ڙ�&#x1f;o����p�,�6���&#x8;M&#x1;9&#x5;&#x6;�M�@@a�,,(��ܵ&#x10;�/x&#x1a;�M^&lt;��ݓ��&#x1c;������B��3c&#xd;�&#x18;�2f�hd�&#x2;��k{��he��&#x14;i&#xd;oH&#x1d;�&#x3;��;s%�P&#x7f;p)��F+�-E������p&#x8;(�&#x1c;����t4.R����^b&#x6;e�D�@����&#xb;}��&#x1c;*󢺎�Z�U����\7B+(:�F�gE��p�]&amp;����&#x10;���&#x18;�ݴhk5s	�&#x1a;���j���o&#x16;�&#x4;���v|Ka&#x13;Wu-1.&#x8;&#x17;�!@EJ&#x1d;�F��uSSΛ:��sE���&#x4;B�.�%&#x19;%���&#x0;1b��Q��]�y_�?;����&quot;�K��QN����Yw��zc&#x19;&#x12;�&#x5;K�&#xd;FA�I&#xc;FV��p�h&#xe;5�m�H&amp;�&#x15;�&#x13;�)�P�@���R&#x3;0�(괣�8��&#xe;��!&#x6;�z^&#x2;�K�&#x1a;�&#xc;ǩ݁�56.�!��&#x4;{Lu&#x8;.p��v;v���}���0�ےЉ9X(� �Ž&#x17;�&#x1e;p@�8�8V�$�&#x1d;yf?���*�&#x15;�ۀC��B��Rc�&#x2;&#x14;�^HH�X��Mֽ7T�g�r�8ɧ�CRq�%��&#x11;&#x12;��Ý=�k��y�8�P=	�v�Իwck�&#x2;&apos;F�^&#x1;Y�;�Uq�ǔd^��6�&#x0;U@UG&#x19;Ր_&#xe;�H&gt;��=���Sx�u�#X#��8X&#x16;&#x8;�~��ea8&#x1b;&#x15;�V�3b&#x17;G&#x10;$=�Ls&#x12;&#xb;����u&lt;�(��&#x8;�g�}�&#x7f;�&#xc;�NS&#x19;O&#x1e;!�B�24n&#x7f;�qo�国����f�ן&#x13;-���=߿%&#x16;�=c.&#x4;&#x1a;wu�\�&#x10;_&#x7f;ǎ�&#x18;b&#xe;et�&#x4;;I�uQ&#x1f;&#x17;��r�H�@&#x15;�8�E��SJ&#xe;�\G&#xf;wyj+�r�[$Ѹ&#x6;-��[DhfU0 4B�U=��C	��K&#x5;8��*��h��&#x1c;��4�4�i���&#x10;��R���&#x16;+�b��yH�W�S�ۡ�&#x11;Z8�,#!Ӏ?p|q&apos;H(�Ȏ&#x1d;\{��&#x6;&gt;	P9&#x1e;��&#xf;/ȝ����|�,&#x1e;�°&#x14;&#x10;=b��Q����qj��;2&amp;���m�lϨ�&#x4;�q�&#x5;+3�,B�ZC&#x15;�&#x7;ܚ�!.&#x1f;0�L�&amp;��4I��5�����&#x97; E4�&#x0;k��q&apos;�AT&#x3;�bbG���g���&lt;�&#xc;)�֤n��eR!g4S�A�G&quot;H��&#xc;RC��}�4��7�B�p&#x1d;�kE�&#x6;��&#x11;��9��C�F�)&#x0;�&#x1b;�H&amp;&#x7f;�e��&#x1b;Lj{��	&#x7f;q��#�H�y��b�&#x3;��&#x1e;��b 9E�&quot;*��ޕ�l:�_�&apos;�&apos;&#x4;�G&#x8;&gt;�(�^�b�&#x10;Eײ7$(�1��{z��&#x1e;�9�u�%Ԩߎ_&#x1c;E���ә���\��)�&#x1d;�&#x1c;6��d��r&#xc;�b&gt;ʛ�2wy9�&#x7;c`��&#x16;E{&#x14;a�L�*�&#x7;��T�`�&#x16;�t1&#x1e;��bts�%i�����Y:C��(�&#x17;�&#x1d;%&#x1a;�&lt;���&#x1f;릘D^&amp;�dV=���7&#xd;
�&#x7;&#x2;*�f����8�)��&#x1;�&#x1f;�c���E�v&#x1c;&#x0;���&#x13;$7B���.�iq:m�h����&#x1c;?&#x1e;�&#x11;퉋�!�&#x8;ܼ)��rz&#x3;_�ۘ&#xc;��m�&#x13;܍p�9���&#xd;
07L�&#x17;�����a��ߋ���F�ć9�����?���C��7&#x1f;��&#x13;]&#x7f;z�ѳ/����d��O�&#xf;�!�?�&#x2;����ۍ/��&#x1c;�6���&#x12;��Q�fx�Tv;x	v�|h��f�q_.�w�&#x15;&#x6;Ƴa&gt;n3����&#xf;&#x3;uQݕ��2&#x1f;~=��&#x1a;e�^&#xe;������_&#x1b;��b1&#x19;DKk&#x3;����^E�+&#x2;�s;j&#x1d;uPN��5��~������ǣ���x&#x6;�9yk���&#x1e;B�,ʣ*��&#x15;��&#xc;���d����,��]{�&amp;��2&gt;�&#x1;���Z&#xf;sI����C��#�O���֊Z��~5������&#x5;�����|-c�x[�qQ�q\��&#x1a;&amp;���3ˣEGE=����d���+���&#x7f;&#x1e;}x�~���m9��&#x4;A���D�&#xf;&#xd;
)������&#x18;-�8�^&#xc;@&#x18;Kȧ�s,��ŕ9om`T�wQ����h1&#x19;�&#x13;���#F�&quot;�!��L6&#x1f;�ٔ&lt;�H|&amp;����m&gt;��~&#x15;}Vc����@�D�D&#x2;R����dZ�z�GP��珗&#x1f;�0�&#x1b;�����v��ԝ��&#x1f;�0������&#x8;�&#xc;�Q�ZdxԮ��&#x10;&#x19;AL=�Z����&#x7f;~��om��ϟ]K���&#x17;�?&#x7;��b&gt;�K������nܜ���/�)M_�8&#x1f;ґ�&#x7;��&#x16;�Z�&#x13;�t&#x1f;b������&#x1f;������w&#x7f;��7n����&#x13;�N��赓�&#x1e;E	&apos;o&#x3;巿DH0��-C%8|QL?���6���Y�Co���&#x16;&#x0;&#x7;&#x6;t&#x1e;C�5��۫�&#xe;&#x2;&#x6;�u�&#x18;��&#x12;�=��u�G�X/!�d%���K����|&#x1;`{��n�}&#x3;���q��m�#&#x1;&#xd;
��e1z1i&#x0;y�+��)Š&#x2;&#x11;-q�f�l����(jO�&#xe;��Y��f�m�Z��&amp;?&#x3;&#xd;
�ӈ���j�I9&#xd;&#x0;&quot;x��m^��j��&#x6;c�Uc�����X�.d���8&#x6;�B������yL�Oȳ.�-ğ�6�j�b��%&#x1e;9�&lt;Q&#x16;GfC&#x5;Uĩ��&#x11;x.~}r&lt;l�&#x1e; ��a=&#x16;�XY&#x7f;��&#x3;�_?}��\�o�&quot;^(�&#x6;Dъ��U�ë�^`T&apos;��&#x17;�\&#x19;F�&#x1e;&#x15;�;.&amp;ES=n��n�Ak�&#x19;�{V��&#x16;E��Y;���rN&#x14;�Z�I�|�&#x1a;^&#x2;�&#x14;�*n@i�8��:y�ᰘ7g��f��&lt;����bi&#x1d;�s�z��BF9�&#x17;nv?]���*m⛏-&#x3;��+�YQ��(�&#x4;����q�&#xf;��1z1S\&#x2;�_Ϫ�Xם,&#x1f;#����&#xe;�&#x1c;�&#x14;1t]�w6&quot;���˺=R4�&#x4;&amp;]5&#x1b;ʴh��Z�&amp;�mӀ�&#x1c;�[d�&#x7;��_Ϩ���	ш��h0kAbq}]��k&#x5;&#x3;W�qV�Ea	�&lt;�&#x17;Sx�jE�7�DQ���l&#x1a;w�BQ;(� ��&#x18;~}eye&#xd;ސ����?��fS&#x12;�&#xd;
��B�M&#x14;Կ&#x10;N�t��&#xb;��q��&#x1e;��dp+�x�R���2)F&#x0;���&#x11;��pC�g&#xb;�`kڬ�&apos;^�&#x16;yt&#x4;PT&#xc;%&#x10;�V&#x7f;O y�&#x18;����o5�7P5����f\�&#x6;��qrJ��&#x10;�&#x10;��2�����Z.�&#x2;r^N�T6��h���7���qeF�e�&#x7f;2�n�7�؏�&#x14;�&gt;�J��� ��]&quot;����&gt;\�&#x1;%�Q��&#xf;&#x7f;���?Y^�&#x4;R�&#x1f;������ɿ��Z@|���&#x7f;oK�g%�˿Ѐ&#x15;#��yu�.�&#xd;~[YN�Qyk{f�}4��U��x�h�������&#x3;&#x8;�-)��,�=xS&#x0;m��M���̉�b�����Z[�b�7��&#x1a;��(9_��ڸ&#x5ed;�&#x1f;�B�X�&#x12;үWU�&#x19;{��Qs�7G�b&gt;�UM&#xd;ߊ��x=x�������}�&#x17;|9���w���豐�_�e&#x8;���k�D�8��&#x2;~3&#xc;��mk���O�e9�I:���Lb�&#x1;}�w���U��&#x1c;��%�S�#�z��&#x6;a.&#x1;^};k���&#x4;�ӊ��}��8&#x2;ϟ�G�.��=��u5���&#xc;�]&#x12;�&quot;&#xe;�h1���U9~&lt;�UG&#x10;�&apos;y&#x14;������_S9�?]�AG�o��\vX{\&lt;%��&#x1a;�P��C&#x1e;A&#x1;��V���|(@A zx������L&#x1;Qo�;�_�;&#x8;&gt;&#x1a;J�2�?&#x0;�JJ�v�/3ٯ���fW&#x1c;�CnlM&#x12;�&#x14;ײ�7GKd	2&#x18;�4�a{*ɳh�Ʌ���o���&#x10;����&#x1d;��%��x9^@�n���&#x1f;�7��&#x1c;�L�=�&#x1;N��$V&#xd;
/��:�mS&#x7f;�C�&#x1f;c�連-��&#xf;���86&#x11;ẀN�;&#x0;&#x1e;����u�I�&#xc;�H�&#x1c;{^;��&#x13;X[&#x2;��M&#xf;&#xb;F�&quot;���k�&#x15;̶W7�,&amp;�x��c&#xf;�9��u6�&#x1;��&#x18;�7���&#x3;�$�I�&#x4;�P�F&#x18;�&#x14;�S�t&#x1a;&#x13;�t�����nm5&#x10;?O��Dך`�ȨG&#xb;`�A��ӊɞ�,&#x1f;^S,5&#x16;&#x11;�XgL�&#xd;�&#x15;��鵘&#x1b; &apos;0&#xe;.=&#x1d;�&#x0;�ı/�&#x1c;,�~bY¿&#x3;�,&#x6;#:PR��&#x1c;�&#x1e;#C�&#x1b;����XQ�&#x5;Մ�����&#x1;��pˌk&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/ef53e0b0-ed1f-4797-bada-874c1c42e6ab/modules/Firefox/77.0.1/release/20200602222727?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Wed, 17 Jun 2020 10:21:17 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PassangerDetails-31" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="outFlightName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">outFlightName</stringProp>
                  <stringProp name="Argument.value">Blue Skies Airlines</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="outFlightNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">outFlightNumber</stringProp>
                  <stringProp name="Argument.value">360</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="outFlightPrice" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">outFlightPrice</stringProp>
                  <stringProp name="Argument.value">270</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="outFlightTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">outFlightTime</stringProp>
                  <stringProp name="Argument.value">5:03</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inFlightName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">inFlightName</stringProp>
                  <stringProp name="Argument.value">Blue Skies Airlines</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inFlightNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inFlightNumber</stringProp>
                  <stringProp name="Argument.value">630</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inFlightPrice" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inFlightPrice</stringProp>
                  <stringProp name="Argument.value">270</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inFlightTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">inFlightTime</stringProp>
                  <stringProp name="Argument.value">12:23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toPort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toPort</stringProp>
                  <stringProp name="Argument.value">Acapulco</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="passCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="servClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">servClass</stringProp>
                  <stringProp name="Argument.value">Coach</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subtotal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">subtotal</stringProp>
                  <stringProp name="Argument.value">540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="taxes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">taxes</stringProp>
                  <stringProp name="Argument.value">44</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="passFirst0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passFirst0</stringProp>
                  <stringProp name="Argument.value">test001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="passLast0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passLast0</stringProp>
                  <stringProp name="Argument.value">test002</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pass.0.meal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pass.0.meal</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditCard" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditCard</stringProp>
                  <stringProp name="Argument.value">AX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditnumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditnumber</stringProp>
                  <stringProp name="Argument.value">1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc_exp_dt_mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc_exp_dt_mn</stringProp>
                  <stringProp name="Argument.value">None</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc_exp_dt_yr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc_exp_dt_yr</stringProp>
                  <stringProp name="Argument.value">None</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc_frst_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc_frst_name</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc_mid_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc_mid_name</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc_last_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc_last_name</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billAddress1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">billAddress1</stringProp>
                  <stringProp name="Argument.value">1325 Borregas Ave.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billAddress2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">billAddress2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">billCity</stringProp>
                  <stringProp name="Argument.value">Sunnyvale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">billState</stringProp>
                  <stringProp name="Argument.value">CA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billZip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">billZip</stringProp>
                  <stringProp name="Argument.value">94089</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="billCountry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">billCountry</stringProp>
                  <stringProp name="Argument.value">215</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delAddress1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">delAddress1</stringProp>
                  <stringProp name="Argument.value">1325 Borregas Ave.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delAddress2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">delAddress2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">delCity</stringProp>
                  <stringProp name="Argument.value">Sunnyvale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">delState</stringProp>
                  <stringProp name="Argument.value">CA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delZip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">delZip</stringProp>
                  <stringProp name="Argument.value">94089</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="delCountry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">delCountry</stringProp>
                  <stringProp name="Argument.value">215</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="buyFlights.x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buyFlights.x</stringProp>
                  <stringProp name="Argument.value">76</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="buyFlights.y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buyFlights.y</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercurypurchase2.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PassangerDetails-38" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">iso-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/black</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase2.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BackToFlight-39" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercuryreservation.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase2.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Signoff-41" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercurysignoff.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Signoff-42" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/mercurysignon.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Signoff-44" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">newtours.demoaut.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">iso-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/black</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://newtours.demoaut.com/mercurysignon.php</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">3030</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">false</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Signoff</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Login_newTours" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers"/>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">oscsid</stringProp>
            <stringProp name="RegexExtractor.regex">Set-Cookie: osCsid=(.+?); path=/</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ValueNotNot</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">props.put(&quot;MyCookie&quot;,&quot;${COOKIE_osCsid}&quot;);
log.info(&quot;PostProcessor in BeanShell...........................Start&quot;);
var x = props.put(&quot;MyCookie&quot;,&quot;${COOKIE_osCsid}&quot;);
log.info(&quot;Value of x is :&quot;+x);
log.info(&quot;PostProcessor is.......................................... end&quot;);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="osCsid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">osCsid</stringProp>
                <stringProp name="Argument.value">${oscsid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">action</stringProp>
                <stringProp name="Argument.value">process</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">userName</stringProp>
                <stringProp name="Argument.value">satya001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">1122</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="login.x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">login.x</stringProp>
                <stringProp name="Argument.value">16</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="login.y" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">login.y</stringProp>
                <stringProp name="Argument.value">9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/login.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercurysignon.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="osCsid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">osCsid</stringProp>
                <stringProp name="Argument.value">${oscsid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercuryreservation.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercurysignon.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="FlightBooking" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
//log.info(&quot;PreProcessor is .........................start&quot;);
//var a=ctx.getCurrentSampler().getCookieManager();
//log.info(&quot;PreProcessor is .........................stepA:&quot;+a);
CookieManager manager=ctx.getCurrentSampler().getCookieManager();
//log.info(&quot;PreProcessor is .........................step2:&quot;+manager);
//var b=new Cookie(&quot;osCsid&quot;,props.get(&quot;MyCookie&quot;),&quot;newtours.demoaut.com&quot;,&quot;/&quot;, false,0);
//log.info(&quot;PreProcessor is .........................stepB:&quot;+b);
Cookie cookie=new Cookie(&quot;osCsid&quot;, props.get(&quot;MyCookie&quot;),&quot;newtours.demoaut.com&quot;,&quot;/&quot;, false, 0);
log.info(&quot;Cookies ......................StepC:&quot;+cookie);
manager.add(cookie);
//import org.apache.jmeter</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">${filePath}</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FlightDetails-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tripType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tripType</stringProp>
                <stringProp name="Argument.value">roundtrip</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passCount" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passCount</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="servClass" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">servClass</stringProp>
                <stringProp name="Argument.value">Coach</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="airline" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">airline</stringProp>
                <stringProp name="Argument.value">No Preference</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="findFlights.x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">findFlights.x</stringProp>
                <stringProp name="Argument.value">58</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="findFlights.y" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">findFlights.y</stringProp>
                <stringProp name="Argument.value">9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercuryreservation2.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation.php?osCsid=cfd435893b184ad345abfb4121dc1190</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchFlight-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="fromPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passCount" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passCount</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="servClass" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">servClass</stringProp>
                <stringProp name="Argument.value">Coach</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="outFlight" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">outFlight</stringProp>
                <stringProp name="Argument.value">Blue Skies Airlines$360$270$5:03</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="inFlight" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">inFlight</stringProp>
                <stringProp name="Argument.value">Blue Skies Airlines$630$270$12:23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="reserveFlights.x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">reserveFlights.x</stringProp>
                <stringProp name="Argument.value">56</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="reserveFlights.y" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">reserveFlights.y</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercurypurchase.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation2.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PassangerDetails-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outFlightName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">outFlightName</stringProp>
                <stringProp name="Argument.value">Blue Skies Airlines</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="outFlightNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">outFlightNumber</stringProp>
                <stringProp name="Argument.value">360</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="outFlightPrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">outFlightPrice</stringProp>
                <stringProp name="Argument.value">270</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="outFlightTime" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">outFlightTime</stringProp>
                <stringProp name="Argument.value">5:03</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="inFlightName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">inFlightName</stringProp>
                <stringProp name="Argument.value">Blue Skies Airlines</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="inFlightNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">inFlightNumber</stringProp>
                <stringProp name="Argument.value">630</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="inFlightPrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">inFlightPrice</stringProp>
                <stringProp name="Argument.value">270</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="inFlightTime" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">inFlightTime</stringProp>
                <stringProp name="Argument.value">12:23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toPort" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toPort</stringProp>
                <stringProp name="Argument.value">Acapulco</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passCount" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passCount</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="toMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">toMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromDay" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromDay</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="fromMonth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">fromMonth</stringProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="servClass" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">servClass</stringProp>
                <stringProp name="Argument.value">Coach</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="subtotal" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">subtotal</stringProp>
                <stringProp name="Argument.value">540</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="taxes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">taxes</stringProp>
                <stringProp name="Argument.value">44</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passFirst0" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passFirst0</stringProp>
                <stringProp name="Argument.value">${FirstName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passLast0" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passLast0</stringProp>
                <stringProp name="Argument.value">${LastName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="pass.0.meal" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">pass.0.meal</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="creditCard" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">creditCard</stringProp>
                <stringProp name="Argument.value">AX</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="creditnumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">creditnumber</stringProp>
                <stringProp name="Argument.value">${CardNumber}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cc_exp_dt_mn" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cc_exp_dt_mn</stringProp>
                <stringProp name="Argument.value">None</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cc_exp_dt_yr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cc_exp_dt_yr</stringProp>
                <stringProp name="Argument.value">None</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cc_frst_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cc_frst_name</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cc_mid_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cc_mid_name</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cc_last_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cc_last_name</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billAddress1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">billAddress1</stringProp>
                <stringProp name="Argument.value">1325 Borregas Ave.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billAddress2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">billAddress2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billCity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">billCity</stringProp>
                <stringProp name="Argument.value">Sunnyvale</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billState" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">billState</stringProp>
                <stringProp name="Argument.value">CA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billZip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">billZip</stringProp>
                <stringProp name="Argument.value">94089</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="billCountry" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">billCountry</stringProp>
                <stringProp name="Argument.value">215</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delAddress1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">delAddress1</stringProp>
                <stringProp name="Argument.value">1325 Borregas Ave.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delAddress2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">delAddress2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delCity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">delCity</stringProp>
                <stringProp name="Argument.value">Sunnyvale</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delState" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">delState</stringProp>
                <stringProp name="Argument.value">CA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delZip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">delZip</stringProp>
                <stringProp name="Argument.value">94089</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="delCountry" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">delCountry</stringProp>
                <stringProp name="Argument.value">215</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="buyFlights.x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">buyFlights.x</stringProp>
                <stringProp name="Argument.value">76</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="buyFlights.y" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">buyFlights.y</stringProp>
                <stringProp name="Argument.value">7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercurypurchase2.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="845916645">Flight Confirmation</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BackToFlight-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercuryreservation.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercurypurchase2.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="SignOff" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Signoff-${__time()}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mercurysignoff.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://newtours.demoaut.com/mercuryreservation.php</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
